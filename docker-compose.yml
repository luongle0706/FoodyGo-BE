services:
  mysql:
    container_name: mysql
    image: mysql
    environment:
      MYSQL_ROOT_PASSWORD: 123456789
      MYSQL_USER: mysql
      MYSQL_PASSWORD: mysql
      MYSQL_DATABASE: foodygo
      TZ: Asia/Saigon
    ports:
      - "3306:3306"
    volumes:
      - ./data/mysql-data:/var/lib/mysql
    healthcheck:
      test: mysqladmin ping -h localhost -u root --password=$$MYSQL_ROOT_PASSWORD
      interval: 10s
      timeout: 5s
      retries: 5
    restart: unless-stopped
    command: ['mysqld', '--character-set-server=utf8mb4', '--collation-server=utf8mb4_unicode_ci','--default-time-zone=+07:00']
  spring-boot-builder:
    container_name: spring-boot-builder
    build:
      context: .
      dockerfile: docker/builder/Dockerfile
    depends_on:
      mysql:
        condition: service_healthy
    volumes:
      - ../maven-cache:/root/.m2
      - ./data/spring-boot-data:/temp/build-output
  spring-boot-runner:
    container_name: spring-boot-runner
    build:
      context: .
      dockerfile: docker/runner/Dockerfile
    environment:
      MYSQL_URL: jdbc:mysql://mysql:3306/foodygo
      MYSQL_USER: root
      MYSQL_PASSWORD: 123456789
      JWT_SECRET: 753474857438754387594385743975348574893759843753498776576576575765634545435365346534645645364565465347657547465
      JWT_REFRESH_SECRET: 123454857438754387594385743975348574893759843753498776576576575765634545435365346534645645364565465347657554321
      REDIS_HOST: redis-container
      REDIS_PORT: 6379
    ports:
      - "8080:8080"
    depends_on:
      spring-boot-builder:
        condition: service_completed_successfully
    volumes:
      - ./data/spring-boot-data:/temp/build-output
    restart: no
  redis:
    image: docker.io/redis:7.2.3
    container_name: redis-container
    restart: always
    ports:
      - "6379:6379"
    volumes:
      - ./data/redis-data:/data
#  ollama:
#    image: ollama/ollama
#    container_name: ollama
#    restart: unless-stopped
#    volumes:
#      - ollama_data:/root/.ollama
#    ports:
#      - "11434:11434"
#    tty: true
#    stdin_open: true
#  deepseek:
#    image: ollama/ollama
#    container_name: deepseek
#    restart: unless-stopped
#    command: ["serve"]
#    environment:
#      - OLLAMA_MODEL=deepseek
#    depends_on:
#      - ollama
#volumes:
#  ollama_data:
#    driver: local